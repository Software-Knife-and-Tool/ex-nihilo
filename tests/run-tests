#! /bin/bash
EXEC=../dist/mu-exec
TMP=/var/tmp

args=("$@")
opts=("${args[@]:1}")

function run () {
    echo "$2" > $TMP/expect.$$

    $EXEC ${opts[@]} -e "$1" > $TMP/result.$$ 2>&1
    
    if [ $? -eq 0 ]
    then
	echo -n $1 ";" $2 ">" `cat $TMP/result.$$` "-- "
	diff $TMP/expect.$$ $TMP/result.$$ > /dev/null 2>&1
	if [ $? -eq 0 ]
	then
	    echo passed
	else
	    echo failed
	fi
    else
	echo $1 "--" $2 "-- test aborted" "-- " failed
    fi
    rm -f $TMP/result.$$ $TMP/expect.$$
}

rm -f $TMP/test.$$.log
while read test; do
    if [ ${test::1} != \; ]
    then
	form=$(echo $test | sed -e "s/;.*$//")
	result=$(echo $test | sed -e "s/^.*;//")
	run "$form" "$result" "$2" "$3" >> $TMP/test.$$.log 2>&1
    fi
done < $1

echo
echo "Test Summary:" $1
echo `date`
echo "versions:" "libmu" `$EXEC -v`
echo "----------------------------"
echo "total tests:" `wc -l $TMP/test.$$.log | sed -e "s/^ *//" -e "s/ .*$//"`
echo "     failed:" `grep failed $TMP/test.$$.log | wc -l`
sed -n -e "/--$/p" $TMP/test.$$.log
grep failed $TMP/test.$$.log
rm -f $TMP/test.$$.log $TMP/expect.$$ $TMP/result.$$ $TMP/version.$$
exit 0
